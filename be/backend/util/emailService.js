const nodemailer = require('nodemailer');

// C·∫•u h√¨nh transporter
const transporter = nodemailer.createTransport({
  service: 'gmail',
  auth: {
    user: process.env.EMAIL_USER || 'anh508023@gmail.com',
    pass: process.env.EMAIL_PASSWORD || 'ioxo uaxe smjn pucw'
  }
});

// Template HTML cho email x√°c nh·∫≠n ƒë·∫∑t s√¢n
const getBookingConfirmationTemplate = (bookingData) => {
  return `
    <!DOCTYPE html>
    <html>
    <head>
      <meta charset="utf-8">
      <style>
        body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
        .container { max-width: 600px; margin: 0 auto; padding: 20px; }
        .header { background: #4CAF50; color: white; padding: 20px; text-align: center; }
        .content { padding: 20px; background: #f9f9f9; }
        .booking-info { background: white; padding: 15px; margin: 10px 0; border-radius: 5px; }
        .info-row { display: flex; justify-content: space-between; margin: 8px 0; }
        .label { font-weight: bold; }
        .footer { text-align: center; padding: 20px; color: #666; }
        .success { color: #4CAF50; font-weight: bold; }
      </style>
    </head>
    <body>
      <div class="container">
        <div class="header">
          <h1>üéâ X√°c Nh·∫≠n ƒê·∫∑t S√¢n Th√†nh C√¥ng!</h1>
        </div>
        
        <div class="content">
          <h2>Ch√†o ${bookingData.user_name},</h2>
          <p>C·∫£m ∆°n b·∫°n ƒë√£ ƒë·∫∑t s√¢n t·∫°i h·ªá th·ªëng c·ªßa ch√∫ng t√¥i. Booking c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c <span class="success">x√°c nh·∫≠n v√† thanh to√°n th√†nh c√¥ng</span>!</p>
          
          <div class="booking-info">
            <h3>üìã Th√¥ng Tin ƒê·∫∑t S√¢n</h3>
            <div class="info-row">
              <span class="label">M√£ ƒë·∫∑t s√¢n:</span>
              <span>#${bookingData.id}</span>
            </div>
            <div class="info-row">
              <span class="label">T√™n s√¢n:</span>
              <span>${bookingData.pitch_name}</span>
            </div>
            <div class="info-row">
              <span class="label">ƒê·ªãa ch·ªâ:</span>
              <span>${bookingData.location}</span>
            </div>
            <div class="info-row">
              <span class="label">Ng√†y ƒë·∫∑t:</span>
              <span>${bookingData.formatted_date}</span>
            </div>
            <div class="info-row">
              <span class="label">Gi·ªù ch∆°i:</span>
              <span>${bookingData.start_time} - ${bookingData.end_time}</span>
            </div>
            <div class="info-row">
              <span class="label">T·ªïng ti·ªÅn:</span>
              <span style="color: #4CAF50; font-weight: bold;">${bookingData.total_price?.toLocaleString('vi-VN')} VNƒê</span>
            </div>
            <div class="info-row">
              <span class="label">Tr·∫°ng th√°i:</span>
              <span class="success">ƒê√£ x√°c nh·∫≠n</span>
            </div>
          </div>

          <div class="booking-info">
            <h3>üìû Th√¥ng Tin Li√™n H·ªá Ch·ªß S√¢n</h3>
            <div class="info-row">
              <span class="label">T√™n ch·ªß s√¢n:</span>
              <span>${bookingData.owner_name}</span>
            </div>
            <div class="info-row">
              <span class="label">S·ªë ƒëi·ªán tho·∫°i:</span>
              <span>${bookingData.owner_phone}</span>
            </div>
          </div>

          <div style="background: #e8f5e8; padding: 15px; margin: 15px 0; border-radius: 5px;">
            <h4>üìù L∆∞u √ù Quan Tr·ªçng:</h4>
            <ul>
              <li>Vui l√≤ng c√≥ m·∫∑t ƒë√∫ng gi·ªù ƒë·∫∑t s√¢n</li>
              <li>Mang theo gi√†y th·ªÉ thao ph√π h·ª£p</li>
              <li>Li√™n h·ªá ch·ªß s√¢n n·∫øu c√≥ thay ƒë·ªïi l·ªãch</li>
              <li>Gi·ªØ l·∫°i email n√†y ƒë·ªÉ ƒë·ªëi chi·∫øu khi c·∫ßn</li>
            </ul>
          </div>
        </div>
        
        <div class="footer">
          <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>
          <p><small>Email n√†y ƒë∆∞·ª£c g·ª≠i t·ª± ƒë·ªông, vui l√≤ng kh√¥ng tr·∫£ l·ªùi.</small></p>
        </div>
      </div>
    </body>
    </html>
  `;
};

// H√†m g·ª≠i email x√°c nh·∫≠n ƒë·∫∑t s√¢n
const sendBookingConfirmationEmail = async (userEmail, bookingData) => {
  try {
    const mailOptions = {
      from: {
        name: 'H·ªá Th·ªëng ƒê·∫∑t S√¢n',
        address: process.env.EMAIL_USER || 'anh508023@gmail.com'
      },
      to: userEmail,
      subject: `‚úÖ X√°c nh·∫≠n ƒë·∫∑t s√¢n th√†nh c√¥ng - M√£ #${bookingData.id}`,
      html: getBookingConfirmationTemplate(bookingData)
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('Email sent successfully:', result.messageId);
    return { success: true, messageId: result.messageId };
  } catch (error) {
    console.error('Error sending email:', error);
    return { success: false, error: error.message };
  }
};

// H√†m g·ª≠i email th√¥ng b√°o h·ªßy ƒë·∫∑t s√¢n
const sendBookingCancellationEmail = async (userEmail, bookingData) => {
  try {
    const cancelTemplate = `
      <!DOCTYPE html>
      <html>
      <head>
        <meta charset="utf-8">
        <style>
          body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
          .container { max-width: 600px; margin: 0 auto; padding: 20px; }
          .header { background: #f44336; color: white; padding: 20px; text-align: center; }
          .content { padding: 20px; background: #f9f9f9; }
          .booking-info { background: white; padding: 15px; margin: 10px 0; border-radius: 5px; }
          .info-row { display: flex; justify-content: space-between; margin: 8px 0; }
          .label { font-weight: bold; }
          .footer { text-align: center; padding: 20px; color: #666; }
          .cancelled { color: #f44336; font-weight: bold; }
        </style>
      </head>
      <body>
        <div class="container">
          <div class="header">
            <h1>‚ùå Th√¥ng B√°o H·ªßy ƒê·∫∑t S√¢n</h1>
          </div>
          
          <div class="content">
            <h2>Ch√†o ${bookingData.user_name},</h2>
            <p>Ch√∫ng t√¥i xin th√¥ng b√°o booking c·ªßa b·∫°n ƒë√£ ƒë∆∞·ª£c <span class="cancelled">h·ªßy b·ªè</span>.</p>
            
            <div class="booking-info">
              <h3>üìã Th√¥ng Tin ƒê·∫∑t S√¢n ƒê√£ H·ªßy</h3>
              <div class="info-row">
                <span class="label">M√£ ƒë·∫∑t s√¢n:</span>
                <span>#${bookingData.id}</span>
              </div>
              <div class="info-row">
                <span class="label">T√™n s√¢n:</span>
                <span>${bookingData.pitch_name}</span>
              </div>
              <div class="info-row">
                <span class="label">Ng√†y ƒë·∫∑t:</span>
                <span>${bookingData.formatted_date}</span>
              </div>
              <div class="info-row">
                <span class="label">Gi·ªù ch∆°i:</span>
                <span>${bookingData.start_time} - ${bookingData.end_time}</span>
              </div>
              <div class="info-row">
                <span class="label">Tr·∫°ng th√°i:</span>
                <span class="cancelled">ƒê√£ h·ªßy</span>
              </div>
            </div>

            <div style="background: #ffebee; padding: 15px; margin: 15px 0; border-radius: 5px;">
              <p>N·∫øu b·∫°n c√≥ th·∫Øc m·∫Øc v·ªÅ vi·ªác h·ªßy booking, vui l√≤ng li√™n h·ªá tr·ª±c ti·∫øp v·ªõi ch·ªß s√¢n ho·∫∑c h·ªó tr·ª£ kh√°ch h√†ng.</p>
            </div>
          </div>
          
          <div class="footer">
            <p>C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i!</p>
          </div>
        </div>
      </body>
      </html>
    `;
    
    const mailOptions = {
      from: {
        name: 'H·ªá Th·ªëng ƒê·∫∑t S√¢n',
        address: process.env.EMAIL_USER || 'anh508023@gmail.com'
      },
      to: userEmail,
      subject: `‚ùå Th√¥ng b√°o h·ªßy ƒë·∫∑t s√¢n - M√£ #${bookingData.id}`,
      html: cancelTemplate
    };

    const result = await transporter.sendMail(mailOptions);
    console.log('Cancellation email sent successfully:', result.messageId);
    return { success: true, messageId: result.messageId };
  } catch (error) {
    console.error('Error sending cancellation email:', error);
    return { success: false, error: error.message };
  }
};

module.exports = {
  sendBookingConfirmationEmail,
  sendBookingCancellationEmail
};